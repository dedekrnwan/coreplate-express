version: '3.6'

services: 
  elasticsearch:
    container_name: elk_elasticsearch
    build:
      context: ./docker/elasticsearch
      args:
        ELK_VERSION: 7.4.0
    volumes:
      - type: bind
        source: ./docker/elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elk_elasticsearch
        target: /usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - 9200:9200
    networks: 
      - default
  logstash:
    container_name: elk_logstash
    build:
      context: ./docker/logstash
      args:
        ELK_VERSION: 7.4.0
    volumes:
      - type: bind
        source: ./docker/logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: false
      - type: bind
        source: ./docker/logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: false
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    ports:
      - "5000:5000"
      - "9600:9600"
    networks: 
      - default
  kibana:
    container_name: elk_kibana
    build:
      context: ./docker/kibana/
      args:
        ELK_VERSION: 7.4.0
    ports:
      - "5601:5601"
    restart: unless-stopped
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
      - logstash
    volumes:
      - type: bind
        source: ./docker/kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true 
    networks: 
      - default
  app:
    container_name: core_app
    build: ./
    ports:
      - 3000:3000
    env_file: .env
    depends_on:
      - redis
      - database
    volumes:
      - type: bind
        source: .
        target: /var/www/app
  redis:
    image: redis:alpine
    container_name: core_redis
    volumes:
      - type: volume
        source: core_redis
        target: /data
      # - type: bind
      #   source: ./docker/redis/redis.conf
      #   target: /usr/local/etc/redis/redis.conf
    networks: 
      - default
    ports:
      - "6379:6379"
    command: ["redis-server", "--bind", "redis", "--port", "6379", "--requirepass","secret", "--appendonly","yes"]
  database:
    # image: postgres
    build:
      context: ./docker/postgresql
    ports:
      - "5434:5432"
    container_name: core_database
    environment: 
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
    volumes:
      - type: volume
        source: core_postgres
        target: /var/lib/postgresql
    networks: 
      - default
volumes:
  core_redis:
  core_postgres:
  elk_elasticsearch:
networks: 
  default:
    driver: bridge