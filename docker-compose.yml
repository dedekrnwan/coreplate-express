version: '3.6'

services: 
  elasticsearch:
    container_name: elk_elasticsearch
    build:
      context: ./docker/elasticsearch
      args:
        ELK_VERSION: 7.4.0
    volumes:
      - type: bind
        source: ./docker/elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elk_elasticsearch
        target: /usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - 9200:9200
    networks: 
      - default
  logstash:
    container_name: elk_logstash
    build:
      context: ./docker/logstash
      args:
        ELK_VERSION: 7.4.0
    volumes:
      - type: bind
        source: ./docker/logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: false
      - type: bind
        source: ./docker/logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: false
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
    ports:
      - "5000:5000"
      - "9600:9600"
    networks: 
      - default
  kibana:
    container_name: elk_kibana
    build:
      context: ./docker/kibana/
      args:
        ELK_VERSION: 7.4.0
    ports:
      - "5601:5601"
    restart: unless-stopped
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
      - logstash
    volumes:
      - type: bind
        source: ./docker/kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true 
    networks: 
      - default
  # database:
  #   # image: postgres
  #   build:
  #     context: ./docker/postgresql
  #   ports:
  #     - "5434:5432"
  #   container_name: elk_database
  #   environment: 
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: root
  #     POSTGRES_DB: postgres
  #   volumes:
  #     - type: volume
  #       source: elk_postgres
  #       target: /var/lib/postgresql
  #   networks: 
  #     - default
  # api:
  #   build: 
  #     context: .
  #   depends_on:
  #     - database
  #     - elasticsearch
  #     - logstash
  #   container_name: elk_api
  #   restart: unless-stopped
  #   environment:
  #       NODE_ENV: production
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   command: npm run production
  #   networks: 
  #     - default
volumes:
  elk_elasticsearch:
networks: 
  default:
    driver: bridge